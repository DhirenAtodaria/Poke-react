{"version":3,"sources":["containers/App/App.module.scss","components/CardList/CardList.module.scss","components/SearchBar/SearchBar.module.scss","components/CardList/Card/Card.module.scss","components/CardList/Card/Stats/index.js","components/CardList/Card/Stats/Stats.jsx","components/CardList/Card/index.js","components/CardList/Card/Card.jsx","firebase.js","components/SearchBar/index.js","components/SearchBar/SearchBar.jsx","components/CardList/index.js","components/CardList/CardList.jsx","containers/App/index.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Stats","word","Object","entries","this","props","statsData","map","stat","index","key","correctionFunction","Component","Card","styleChecker","pokeData","type","styles","dark","water","electric","fire","psychic","grass","ice","fighting","dragon","card","scale","transitionSpeed","className","card__image_container","src","image","alt","card__image","card__caption","card__name","name","card__type","card__stats","stats","card__abilities","card__ability","card__label","ability","hiddenability","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","SearchBar","root","noValidate","autoComplete","TextField","id","label","variant","color","fullWidth","margin","value","searchText","onChange","searchFilterFunction","CardList","state","pokemon","filteredPoke","event","target","setState","filterPoke","filter","poke","toUpperCase","includes","collection","get","then","query","docs","doc","data","Cardgrid","App","container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.677af347.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Ogio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cardgrid\":\"CardList_Cardgrid__2typg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchBar_root__1t7-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__22O2y\",\"card__type\":\"Card_card__type__2O6xG\",\"card__image\":\"Card_card__image__1zWse\",\"card__caption\":\"Card_card__caption__3jV8j\",\"card__image-container\":\"Card_card__image-container__1XjJO\",\"card__label\":\"Card_card__label__3e6fA\",\"card__name\":\"Card_card__name__yDrhd\",\"card__stats\":\"Card_card__stats__1r-RF\",\"card__abilities\":\"Card_card__abilities__I6I7Y\",\"card__ability\":\"Card_card__ability__VZg4u\",\"water\":\"Card_water__3E0P_\",\"electric\":\"Card_electric__2GtL3\",\"fire\":\"Card_fire__jul22\",\"psychic\":\"Card_psychic__1EbxX\",\"dark\":\"Card_dark__1aKAu\",\"grass\":\"Card_grass__juJnR\",\"ice\":\"Card_ice__b4q4J\",\"fairy\":\"Card_fairy__2_EGV\",\"fighting\":\"Card_fighting__2UN1U\",\"dragon\":\"Card_dragon__3RygK\"};","import Stats from './Stats';\r\n\r\nexport default Stats;","import React, { Component } from 'react';\r\nexport default class Stats extends Component {\r\n\r\n    correctionFunction(word) {\r\n        switch(word) {\r\n            case \"hp\":\r\n                return \"HP\"\r\n            case \"attack\":\r\n                return \"Attack\";\r\n            case \"defense\":\r\n                return \"Defense\";\r\n            case \"sa\":\r\n                return \"Special Attack\";\r\n            case \"sd\":\r\n                return \"Special Defense\";\r\n            case \"speed\":\r\n                return \"Speed\";\r\n            default:\r\n                return word;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tbody>\r\n                {Object.entries(this.props.statsData).map((stat, index) => (\r\n                    <tr key={index}>\r\n                        <th>{this.correctionFunction(stat[0])}</th>\r\n                        <td>{stat[1]}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        )\r\n    }\r\n}\r\n","import Card from './Card';\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport styles from './Card.module.scss';\r\nimport Stats from './Stats';\r\nimport Tilt from 'react-parallax-tilt';\r\n\r\nexport default class Card extends Component {\r\n    styleChecker = () => {\r\n        switch(this.props.pokeData.type) {\r\n            case \"Dark\":\r\n                return styles.dark\r\n            case \"Water\":\r\n                return styles.water\r\n            case \"Electric\":\r\n                return styles.electric\r\n            case \"Fire\":\r\n                return styles.fire\r\n            case \"Psychic\":\r\n                return styles.psychic\r\n            case \"Grass\":\r\n                return styles.grass\r\n            case \"Ice\":\r\n                return styles.ice\r\n            case \"Fighting\":\r\n                return styles.fighting\r\n            case \"Dragon\":\r\n                return styles.dragon\r\n            default:\r\n                return styles.card\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tilt scale={1.15} transitionSpeed={1000}>\r\n                <figure className={`${styles.card} ${this.styleChecker()}`}>\r\n                    <div className={styles.card__image_container}>\r\n                        <img src={this.props.pokeData.image} alt=\"poke\" className={styles.card__image} />\r\n                    </div>\r\n\r\n                    <figcaption className={styles.card__caption}>\r\n                        <h1 className={styles.card__name}>{this.props.pokeData.name}</h1>\r\n                        <h3 className={styles.card__type}>\r\n                            {this.props.pokeData.type}\r\n                        </h3>\r\n                        <table className={styles.card__stats}>\r\n                            <Stats statsData={this.props.pokeData.stats} />\r\n                        </table>\r\n\r\n                        <div className={styles.card__abilities}>\r\n                            <h4 className={styles.card__ability}>\r\n                                <span className={styles.card__label}>Ability</span>\r\n                                {this.props.pokeData.ability}\r\n                                </h4>\r\n                            <h4 className={styles.card__ability}>\r\n                                <span className={styles.card__label}>Hidden Ability</span>\r\n                                {this.props.pokeData.hiddenability}\r\n                                </h4>\r\n                        </div>\r\n                    </figcaption>\r\n                </figure>\r\n            </Tilt>\r\n        )\r\n    }\r\n}\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDrFowwLA9Jhnm3Jq0cEWfWgwVxpvkenj4\",\r\n    authDomain: \"pokeapi-react.firebaseapp.com\",\r\n    databaseURL: \"https://pokeapi-react.firebaseio.com\",\r\n    projectId: \"pokeapi-react\",\r\n    storageBucket: \"pokeapi-react.appspot.com\",\r\n    messagingSenderId: \"318926115608\",\r\n    appId: \"1:318926115608:web:d8f428b749af826b5ec46d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore();\r\nexport default firebase;","import SearchBar from './SearchBar';\r\n\r\nexport default SearchBar;","import React, { Component } from 'react'\r\nimport styles from './SearchBar.module.scss';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default class SearchBar extends Component {\r\n    render() {\r\n        return (\r\n            <form className={styles.root} noValidate autoComplete=\"off\">\r\n                <TextField \r\n                    id=\"outlined-basic\" \r\n                    label=\"Search\" \r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    value={this.props.searchText}\r\n                    onChange={this.props.searchFilterFunction}\r\n                    />\r\n            </form>\r\n        )\r\n    }\r\n}","import CardList from './CardList';\r\n\r\nexport default CardList;","import React, { Component } from 'react';\r\nimport styles from './CardList.module.scss';\r\nimport Card from './Card';\r\nimport { firestore } from \"../../firebase\";\r\nimport SearchBar from '../SearchBar';\r\n\r\nexport default class CardList extends Component {\r\n    state = {\r\n        pokemon: [],\r\n        searchText: \"\",\r\n        filteredPoke: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        firestore\r\n            .collection(\"pokemon\")\r\n            .get()\r\n            .then((query) => {\r\n                const pokemon = query.docs.map(doc => doc.data());\r\n                this.setState({ pokemon: pokemon,\r\n                                filteredPoke: pokemon\r\n                             })\r\n            });\r\n    }\r\n\r\n    searchFilterFunction = (event) => {\r\n        const searchText = event.target.value;\r\n        this.setState({searchText}, this.filterPoke);\r\n    }\r\n\r\n    filterPoke = () => {\r\n        let filteredPoke = this.state.pokemon.filter(poke => {\r\n            return poke.name.toUpperCase().includes(this.state.searchText.toUpperCase())\r\n        })\r\n        this.setState({filteredPoke})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SearchBar searchText={this.state.searchText} searchFilterFunction={this.searchFilterFunction}/>\r\n                <section className={styles.Cardgrid}>\r\n                    {this.state.filteredPoke.map((pokemon, index) => (\r\n                    <Card key={index} pokeData={pokemon} />\r\n                    ))}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}","import App from './App';\r\n\r\nexport default App;","import React from 'react';\r\nimport styles from './App.module.scss';\r\nimport CardList from '../../components/CardList';\r\n\r\nexport default function App() {\r\n    return (\r\n        <main className={styles.container}>\r\n            <h1>Pokedex</h1>\r\n            <CardList />\r\n        </main>\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}